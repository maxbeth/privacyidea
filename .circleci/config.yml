jobs:
  test_generic:
    description: Run all tests with the latest packages
    executor: python/default
    steps:
      - checkout
      - run: git submodule sync
      - run: git submodule update --init
      # We do not want any caching (always the latest packages) therefore we
      # install the packages directly (not using the python orb)
      - run:
          command: pip install pytest pytest-cov mock responses testfixtures
      - run:
          command: pip install -e .
      - run:
          command: mkdir -p test-report
      - run:
          command: |
            python -b -m pytest --cov=privacyidea --junit-xml=test-report/report_generic.xml tests/
          name: Test generic
      - store_artifacts:
          path: test-report/report_generic.xml
          destination: generic-test-report

  test_mysql:
    description: Run all tests with MySQL database backend
    docker:
      # this is a debian based image but this shouldn't be a problem.
      - image: circleci/python:2.7-stretch

    working_directory: ~/repo

    steps:
      - checkout
      - run: git submodule sync
      - run: git submodule update --init
        # install some required packages for building ubuntu packages
      - run: sudo -u root apt-get install build-essential python-setuptools python-all devscripts lsb-release

      # Download and cache dependencies
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "requirements.txt" }}
          # fallback to using the latest cache if no exact match is found
          - v1-dependencies-

      # Setup the Virtualenv for building/installing privacyidea
      # We won't use requirements.txt here since we build using setup.py
      - run:
          command: mkdir -p test-report
      - run:
          command: |
            python -b -m pytest --cov=privacyidea --junit-xml=test-report/report_mysql.xml tests/
          name: MySQL Test
      - store_artifacts:
          path: test-report/report_mysql.xml
          destination: mysql-test-report

      - save_cache:
          paths:
            - ./venv
          key: v1-dependencies-{{ checksum "requirements.txt" }}

version: 2.1
workflows:
  nightly:
    triggers:
      - schedule:
          cron: "0 6 * * *"
          filters:
            branches:
              only:
                - master
    jobs:
      - test_generic
      - test_mysql
